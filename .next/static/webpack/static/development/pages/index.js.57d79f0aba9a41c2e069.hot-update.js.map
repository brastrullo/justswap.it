{"version":3,"file":"static/webpack/static/development/pages/index.js.57d79f0aba9a41c2e069.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import {connect} from \"react-redux\";\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport LoginPage from '../components/LoginPage'\nimport RegistrationPage from '../components/RegistrationPage'\n\nconst App = styled.main`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  text-align: center;\n  form {\n    margin: 0 auto;\n    max-width: 30rem;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n  legend {\n    margin: 1rem auto;\n    font-size: 1.2rem;\n  }\n  & > p {\n    margin: 1rem 0 0 ;\n  }\n  `\n\nfunction HomePage(props) {\n  const [userObj, setUserObj] = useState({})\n  const [toggleLogin, setToggleLogin] = useState(false)\n  const notLoggedIn = Object.keys(userObj).length === 0\n\n  useEffect(() => {\n    if (notLoggedIn) {\n      console.log('Please login.')\n    } else {\n      console.log({userObj})\n    }\n  }, [userObj])\n\n  const hideRegistration = () => {\n    setToggleLogin(!toggleLogin)\n  }\n  \n  return (\n    <App>\n      {\n        notLoggedIn ? (\n        <>\n          {\n            toggleLogin ?\n            <>\n              <LoginPage setUserObj={setUserObj} />\n              <p>Need to register?</p>\n              <button onClick={hideRegistration}>Register</button>\n            </>\n            :\n            <>\n              <RegistrationPage />\n              <p>Already registered?</p>\n              <button onClick={hideRegistration}>Login</button>\n            </>\n          }\n          <>\n            <div>Prop from Redux {props.foo}</div>\n            <div>Prop from getInitialProps {props.custom}</div>\n          </>\n        </>\n        ) : ( \n          <>\n            <p>Logged in</p>\n            <div>{ JSON.stringify(userObj) }</div>\n          </>\n        )\n      }\n    </App>\n  )\n}\n\nHomePage.getInitialProps = ({store, isServer, pathname, query}) => {\n  store.dispatch({type: 'FOO', payload: 'qwerett'}); // The component can read from the store's state when rendered\n  return {custom: 'zxcvzz'}; // You can pass some custom props to the component from here\n}\n\nexport default connect(state => state)(HomePage);"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}