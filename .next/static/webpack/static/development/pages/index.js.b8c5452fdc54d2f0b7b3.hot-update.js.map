{"version":3,"file":"static/webpack/static/development/pages/index.js.b8c5452fdc54d2f0b7b3.hot-update.js","sources":["webpack:///./components/RegistrationPage.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Button from './Button'\n\nconst RegistrationPage = () => {\n  const registrationInit = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }\n  const errorMsg = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }\n  const [registrationObj, setRegistrationObj] = useState(registrationInit)\n  const [errorMsgObj, setErrorMsgsObj] = useState(errorMsg)\n  const [submitReady, setSubmitReady] = useState(false)\n\n  useEffect(() => {checkValidity()}, [errorMsgObj])\n\n  const inputHandler = (e) => {\n    e.preventDefault()\n    setRegistrationObj({\n      ...registrationObj,\n      ...{ [e.target.id]: e.target.value }\n    })\n    setMessages(e.target)\n  }\n\n  const checkValidity = () => {\n    const arr = Object.entries(errorMsgObj)\n    arr.forEach(entry => {\n      const element = document.querySelectorAll(`#${entry[0]}`)\n      element.forEach(item => {\n        if (entry[1].length > 0) {\n          item.classList.add('error')\n          item.classList.remove('success')\n        } else {\n          item.classList.remove('error')\n          item.classList.add('success')\n        }\n      })\n    })\n    const allFieldsFilled = Object.values(registrationObj).every(item => item.length > 0)\n    const isZeroErrors = arr.every(item => item[1].length === 0)\n    setSubmitReady(isZeroErrors && allFieldsFilled)\n  }\n\n  const setMessages = (target) => {\n    let pattern\n    let err = ''\n    switch(true) {\n      case target.id === 'username':\n        pattern = /^.{4,10}$/\n        !pattern.test(target.value) &&\n          (err+= 'Username must be between 4-10 characters in length')\n        break;\n      case target.id === 'email':\n        pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        !pattern.test(target.value) &&\n          (err+= 'Incorrect email format')\n        break;\n      case target.id === 'password' || target.id === 'confirmPassword':\n        const pMatch =\n          target.id === 'password' && registrationObj.confirmPassword === target.value ||\n          target.id === 'confirmPassword' && registrationObj.password === target.value\n        const pLengthCorrect = target.value.length >= 8 && target.value.length <=16\n        !pLengthCorrect && (err+='Must be 8-16 characters in length. ')\n        !pMatch && (err+='Passwords must match. ')\n      default:\n        break;\n    }\n\n    target.id === 'password' || target.id === 'confirmPassword'\n    ? setErrorMsgsObj({...errorMsgObj, ...{ confirmPassword: `${err}`}})\n    : setErrorMsgsObj({...errorMsgObj, ...{ [target.id]: `${err}`}})\n  }\n\n  return (\n    <>\n    <form>\n      <legend>Register Account</legend>\n      <Input\n        id=\"username\"\n        label=\"Username\"\n        min='4'\n        max='10'\n        value={registrationObj.username}\n        error={errorMsgObj.username}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"email\"\n        label=\"Email\"\n        value={registrationObj.email}\n        error={errorMsgObj.email}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        min='8'\n        max='16'\n        autoComplete=\"new-password\"\n        value={registrationObj.password}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"confirmPassword\"\n        label=\"Confirm Password\"\n        type=\"password\"\n        min='8'\n        max='16'\n        autoComplete=\"new-password\"\n        value={registrationObj.confirmPassword}\n        error={errorMsgObj.confirmPassword}\n        onChange={inputHandler}\n      />\n      <Button disabled={!submitReady} text=\"Submit\" />\n    </form>\n  </>\n  )\n}\n\nexport default RegistrationPage"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AARA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAgBA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAnBA;AACA;AAqBA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}