{"version":3,"file":"static/webpack/static/development/pages/index.js.08ab098dd1b894d98851.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import { connect, useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from '../reducers/rootReducer'\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport LoginPage from '../components/LoginPage'\nimport RegistrationPage from '../components/RegistrationPage'\n\nconst App = styled.main`\n  font-size: ${({ theme }) => theme.fontSize.base};\n  text-align: center;\n  form {\n    margin: 0 auto;\n    max-width: 30rem;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n  legend {\n    margin: 1rem auto;\n    font-size: 1.2rem;\n  }\n  & > p {\n    margin: 1rem 0 0 ;\n  }\n  `\n\nfunction HomePage(props) {\n  const dispatch = useDispatch()\n  const { currentUser } = useSelector(\n    (state: RootState) => state.users\n  )\n\n  const [userObj, setUserObj] = useState({})\n  const [toggleLogin, setToggleLogin] = useState(false)\n  const notLoggedIn = Object.keys(userObj).length === 0\n\n  useEffect(() => {\n    if (notLoggedIn) {\n      console.log('Please login.')\n    } else {\n      console.log({userObj})\n    }\n  }, [userObj])\n\n  const registrationLoginToggle = () => {\n    setToggleLogin(!toggleLogin)\n  }\n  \n  return (\n    <App>\n      {\n        notLoggedIn ? (\n        <>\n          <h1>Welcome to {props.custom.title}</h1>\n          {\n            toggleLogin ?\n            <>\n              <LoginPage />\n              <p>Need to register?</p>\n              <button onClick={registrationLoginToggle}>Register</button>\n            </>\n            :\n            <>\n              <RegistrationPage />\n              <p>Already registered?</p>\n              <button onClick={registrationLoginToggle}>Login</button>\n            </>\n          }\n        </>\n        ) : ( \n          <>\n            <p>Logged in</p>\n            <div>{ JSON.stringify(userObj) }</div>\n          </>\n        )\n      }\n    </App>\n  )\n}\n\n\nHomePage.getInitialProps = ({store, isServer, pathname, query}) => {\n  // pass custom props by returning an {object} containing key [custom]\n  return { custom: {title: 'JustSwap.it'} }\n}\n\nexport default connect(state => state)(HomePage);"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AAFA;AAGA;AAAA;AAHA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;;A","sourceRoot":""}