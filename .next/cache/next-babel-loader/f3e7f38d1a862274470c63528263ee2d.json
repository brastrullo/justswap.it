{"ast":null,"code":"var _jsxFileName = \"/Users/bradras/Projects/justswap.it/components/Input.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nconst StyledInput = styled.main.withConfig({\n  displayName: \"Input__StyledInput\",\n  componentId: \"sc-1f5sbft-0\"\n})([\".input-container{position:relative;}input{width:100%;box-sizing:border-box;}input.error{border:1px solid red;}.input-success{border:1px solid purple;}.input-success::after{display:inline-block;content:' U+2714';position:relative;top:0;right:-1rem;color:green;}\"]);\n\nfunction Input({\n  id,\n  label,\n  onChange,\n  value,\n  type = 'text',\n  required = false,\n  error = '',\n  autoComplete = '',\n  max = '',\n  min = '',\n  pattern = ''\n}) {\n  const inputSuccess = value.length > 0 && error.length === 0;\n  return __jsx(StyledInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, label), __jsx(\"div\", {\n    className: `input-container ${inputSuccess && 'input-success'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: type,\n    id: id,\n    name: id,\n    value: value,\n    onChange: onChange,\n    min: min,\n    max: max,\n    pattern: pattern,\n    autoComplete: autoComplete,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), error.length > 0 && __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, error));\n}\n\nexport default Input;","map":{"version":3,"sources":["/Users/bradras/Projects/justswap.it/components/Input.tsx"],"names":["styled","StyledInput","main","Input","id","label","onChange","value","type","required","error","autoComplete","max","min","pattern","inputSuccess","length"],"mappings":";;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,WAAW,GAAGD,MAAM,CAACE,IAAV;AAAA;AAAA;AAAA,4QAAjB;;AAwBA,SAASC,KAAT,CAAe;AACbC,EAAAA,EADa;AAEbC,EAAAA,KAFa;AAGbC,EAAAA,QAHa;AAIbC,EAAAA,KAJa;AAKbC,EAAAA,IAAI,GAAG,MALM;AAMbC,EAAAA,QAAQ,GAAG,KANE;AAObC,EAAAA,KAAK,GAAG,EAPK;AAQbC,EAAAA,YAAY,GAAG,EARF;AASbC,EAAAA,GAAG,GAAG,EATO;AAUbC,EAAAA,GAAG,GAAG,EAVO;AAWbC,EAAAA,OAAO,GAAC;AAXK,CAAf,EAYG;AACD,QAAMC,YAAY,GAAGR,KAAK,CAACS,MAAN,GAAe,CAAf,IAAoBN,KAAK,CAACM,MAAN,KAAiB,CAA1D;AAEA,SACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAEZ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBC,KAArB,CADF,EAEE;AAAK,IAAA,SAAS,EAAG,mBAAkBU,YAAY,IAAI,eAAgB,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAEP,IADR;AAEE,IAAA,EAAE,EAAEJ,EAFN;AAGE,IAAA,IAAI,EAAEA,EAHR;AAIE,IAAA,KAAK,EAAEG,KAJT;AAKE,IAAA,QAAQ,EAAED,QALZ;AAME,IAAA,GAAG,EAAEO,GANP;AAOE,IAAA,GAAG,EAAED,GAPP;AAQE,IAAA,OAAO,EAAEE,OARX;AASE,IAAA,YAAY,EAAEH,YAThB;AAUE,IAAA,QAAQ,EAAEF,QAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAiBIC,KAAK,CAACM,MAAN,GAAe,CAAf,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAP,CAlBJ,CADF;AAuBD;;AAED,eAAeP,KAAf","sourcesContent":["\nimport styled from 'styled-components'\n\nconst StyledInput = styled.main`\n  .input-container {\n    position: relative;\n  }\n  input {\n    width: 100%;\n    box-sizing: border-box;\n  }\n  input.error {\n    border: 1px solid red;\n  }\n  .input-success {\n    border: 1px solid purple;\n  }\n  .input-success::after {\n    display: inline-block;\n    content: ' U+2714';\n    position: relative;\n    top: 0;\n    right: -1rem;\n    color: green;\n  }\n`\n\nfunction Input({\n  id,\n  label,\n  onChange,\n  value,\n  type = 'text',\n  required = false,\n  error = '',\n  autoComplete = '',\n  max = '',\n  min = '',\n  pattern=''\n}) {\n  const inputSuccess = value.length > 0 && error.length === 0\n\n  return (\n    <StyledInput>\n      <label htmlFor={id}>{label}</label>\n      <div className={`input-container ${inputSuccess && 'input-success'}`}>\n        <input\n          type={type}\n          id={id}\n          name={id}\n          value={value}\n          onChange={onChange}\n          min={min}\n          max={max}\n          pattern={pattern}\n          autoComplete={autoComplete}\n          required={required}\n        />\n      </div>\n      {\n        error.length > 0 &&\n        <span>{error}</span>\n      }\n    </StyledInput>\n  )\n}\n\nexport default Input"]},"metadata":{},"sourceType":"module"}