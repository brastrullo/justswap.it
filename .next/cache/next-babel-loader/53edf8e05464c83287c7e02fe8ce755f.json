{"ast":null,"code":"var _jsxFileName = \"/Users/bradras/Projects/justswap.it/components/RegistrationPage.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport Input from './Input';\nimport Button from './Button';\n\nconst RegistrationPage = () => {\n  const registrationInit = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const errorMsg = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const {\n    0: registrationObj,\n    1: setRegistrationObj\n  } = useState(registrationInit);\n  const {\n    0: errorMsgObj,\n    1: setErrorMsgsObj\n  } = useState(errorMsg);\n  useEffect(() => {\n    console.log(registrationObj);\n  }, [registrationObj]);\n  useEffect(() => {\n    console.log(errorMsgObj);\n  }, [errorMsgObj]);\n\n  const inputHandler = e => {\n    e.preventDefault();\n    setRegistrationObj(_objectSpread({}, registrationObj, {}, {\n      [e.target.id]: e.target.value\n    }));\n\n    switch (true) {\n      case e.target.id === 'username':\n        usernameValidation(e.target, registrationObj.username, e.target.pattern);\n        break;\n\n      case e.target.id === 'email':\n        emailValidation(e.target, registrationObj.username, e.target.pattern);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const checkValid = (element, input, pattern) => {\n    const valid = new RegExp(pattern).test(input);\n\n    if (valid) {\n      element.classList.remove('error');\n      element.classList.add('success');\n      return true;\n    } else {\n      element.classList.add('error');\n      element.classList.remove('success');\n      return false;\n    }\n  };\n\n  const usernameValidation = (element, input, pattern) => {\n    let err = '';\n    checkValid(element, input, pattern) ? err = '' : err += 'Username must be between 4-10 characters in length';\n    setErrorMsgsObj(_objectSpread({}, errorMsgObj, {}, {\n      username: `${err}`\n    }));\n  };\n\n  const emailValidation = (element, input, pattern) => {\n    let err = '';\n    checkValid(element, input, pattern) ? err = '' : err += 'Incorrect email format';\n    setErrorMsgsObj(_objectSpread({}, errorMsgObj, {}, {\n      email: `${err}`\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Register Account\"), __jsx(Input, {\n    id: \"username\",\n    label: \"Username\",\n    pattern: \"^.{4,10}$\",\n    min: \"4\",\n    max: \"10\",\n    value: registrationObj.username,\n    error: errorMsgObj.username,\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    id: \"email\",\n    label: \"Email\",\n    pattern: \"^\\\\w+@[a-zA-Z_]+?\\\\.[a-zA-Z]{2,3}$\",\n    value: registrationObj.email,\n    error: errorMsgObj.email,\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"new-password\",\n    value: registrationObj.password,\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    id: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    value: registrationObj.confirmPassword,\n    onChange: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    text: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default RegistrationPage;","map":{"version":3,"sources":["/Users/bradras/Projects/justswap.it/components/RegistrationPage.tsx"],"names":["useState","useEffect","Input","Button","RegistrationPage","registrationInit","username","email","password","confirmPassword","errorMsg","registrationObj","setRegistrationObj","errorMsgObj","setErrorMsgsObj","console","log","inputHandler","e","preventDefault","target","id","value","usernameValidation","pattern","emailValidation","checkValid","element","input","valid","RegExp","test","classList","remove","add","err"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Input from './Input'\nimport Button from './Button'\n\nconst RegistrationPage = () => {\n  const registrationInit = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }\n  const errorMsg = {\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }\n  const [registrationObj, setRegistrationObj] = useState(registrationInit)\n  const [errorMsgObj, setErrorMsgsObj] = useState(errorMsg)\n\n  useEffect(() => {console.log(registrationObj)}, [registrationObj])\n  useEffect(() => {console.log(errorMsgObj)}, [errorMsgObj])\n\n  const inputHandler = (e) => {\n    e.preventDefault()\n    setRegistrationObj({\n      ...registrationObj,\n      ...{ [e.target.id]: e.target.value }\n    })\n    switch(true) {\n      case e.target.id === 'username':\n        usernameValidation(e.target, registrationObj.username, e.target.pattern)\n        break;\n      case e.target.id === 'email':\n        emailValidation(e.target, registrationObj.username, e.target.pattern)\n        break;\n      default:\n        break;\n    }\n  }\n  const checkValid = (element, input, pattern) => {\n    const valid = new RegExp(pattern).test(input)\n    if (valid) {\n      element.classList.remove('error')\n      element.classList.add('success')\n      return true\n    } else {\n      element.classList.add('error')\n      element.classList.remove('success')\n      return false\n    }\n  }\n  \n  const usernameValidation = (element, input, pattern) => {\n    let err = ''\n    checkValid(element, input, pattern)\n      ? (err='')\n      : (err+= 'Username must be between 4-10 characters in length')\n    setErrorMsgsObj({...errorMsgObj, ...{ username: `${err}`}})\n  }\n\n  const emailValidation = (element, input, pattern) => {\n    let err = ''\n    checkValid(element, input, pattern)\n      ? (err='')\n      : (err+= 'Incorrect email format')\n    setErrorMsgsObj({...errorMsgObj, ...{ email: `${err}`}})\n  }\n  return (\n    <>\n    <form>\n      <legend>Register Account</legend>\n      <Input\n        id=\"username\"\n        label=\"Username\"\n        pattern='^.{4,10}$'\n        min='4'\n        max='10'\n        value={registrationObj.username}\n        error={errorMsgObj.username}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"email\"\n        label=\"Email\"\n        pattern='^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$'\n        value={registrationObj.email}\n        error={errorMsgObj.email}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"new-password\"\n        value={registrationObj.password}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"confirmPassword\"\n        label=\"Confirm Password\"\n        type=\"password\"\n        value={registrationObj.confirmPassword}\n        onChange={inputHandler}\n      />\n      <Button text=\"Submit\" />\n    </form>\n  </>\n  )\n}\n\nexport default RegistrationPage"]},"metadata":{},"sourceType":"module"}