{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bradras/Projects/justswap.it/components/LoginPage.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useDispatch, useSelector, connect } from \"react-redux\";\nimport { useState, useEffect } from 'react';\nimport mockData from '../mockData.json';\nimport Input from './Input';\nimport Button from './Button';\nimport { loginUser } from '../reducers/usersSlice'; // import GoogleLogin from 'react-google-login';\n\nvar LoginPage = function LoginPage(_ref) {\n  var setUserObj = _ref.setUserObj;\n  var loginInit = {\n    user: '',\n    pass: ''\n  };\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.users;\n  }),\n      loading = _useSelector.loading,\n      usersArray = _useSelector.usersArray;\n\n  var _useState = useState(loginInit),\n      loginObj = _useState[0],\n      setLoginObj = _useState[1];\n\n  var _useState2 = useState(false),\n      loginReady = _useState2[0],\n      setLoginReady = _useState2[1];\n\n  useEffect(function () {\n    console.log(loginObj);\n    var allFieldsFilled = Object.values(loginObj).every(function (item) {\n      return item.length > 0;\n    });\n\n    if (allFieldsFilled) {\n      setLoginReady(true);\n    } else {\n      setLoginReady(false);\n    }\n  }, [loginObj]);\n\n  var inputHandler = function inputHandler(e) {\n    e.preventDefault();\n    setLoginObj(_objectSpread({}, loginObj, {}, _defineProperty({}, e.target.id, e.target.value)));\n  }; // const responseGoogle = (response) => {\n  //   console.log(response);\n  // }\n\n\n  var doesUserExist = function doesUserExist(email) {\n    var foundUser = mockData.users.filter(function (user) {\n      return user.email === email;\n    });\n\n    if (email.length > 0 && foundUser.length === 0) {\n      return 'Email not found.';\n    }\n  };\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault();\n    console.log({\n      loginObj: loginObj\n    });\n    loginUser(loginObj);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Login JustSwap.it\"), __jsx(Input, {\n    id: \"user\",\n    label: \"Email\",\n    autoComplete: \"username\",\n    error: doesUserExist(loginObj.user),\n    value: loginObj.user,\n    onChange: inputHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    id: \"pass\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    value: loginObj.pass,\n    onChange: inputHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    disabled: !loginReady,\n    text: \"Login\",\n    onClick: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default connect(function (state) {\n  return state;\n})(LoginPage);","map":{"version":3,"sources":["/Users/bradras/Projects/justswap.it/components/LoginPage.tsx"],"names":["useDispatch","useSelector","connect","useState","useEffect","mockData","Input","Button","loginUser","LoginPage","setUserObj","loginInit","user","pass","dispatch","state","users","loading","usersArray","loginObj","setLoginObj","loginReady","setLoginReady","console","log","allFieldsFilled","Object","values","every","item","length","inputHandler","e","preventDefault","target","id","value","doesUserExist","email","foundUser","filter","submitHandler"],"mappings":"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","sourcesContent":["import { useDispatch, useSelector, connect} from \"react-redux\";\nimport { useState, useEffect } from 'react'\nimport { getUserAccess } from '../utils/asyncActions'\nimport { RootState } from '../reducers/rootReducer'\nimport mockData from '../mockData.json'\nimport Input from './Input'\nimport Button from './Button'\nimport { loginUser } from '../reducers/usersSlice'\n\n// import GoogleLogin from 'react-google-login';\n\nconst LoginPage = ({\n  setUserObj\n}) => {\n  const loginInit = {\n    user: '',\n    pass: ''\n  }\n\n  const dispatch = useDispatch()\n  const { loading, usersArray } = useSelector(\n    (state: RootState) => state.users\n  )\n\n  const [loginObj, setLoginObj] = useState(loginInit)\n  const [loginReady, setLoginReady] = useState(false)\n\n  useEffect(() => {\n    console.log(loginObj)\n    const allFieldsFilled = Object.values(loginObj).every(item => item.length > 0)\n    if (allFieldsFilled) {\n      setLoginReady(true)\n    } else {\n      setLoginReady(false)\n    }\n  }, [loginObj])\n\n  const inputHandler = (e) => {\n    e.preventDefault()\n    setLoginObj({\n      ...loginObj,\n      ...{ [e.target.id]: e.target.value }\n    })\n  }\n\n  // const responseGoogle = (response) => {\n  //   console.log(response);\n  // }\n\n  const doesUserExist = (email) => {\n    const foundUser = mockData.users.filter(user => user.email === email)\n    if (email.length > 0 && foundUser.length === 0) {\n      return 'Email not found.'\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    console.log({loginObj})\n    loginUser(loginObj)\n  }\n\n  return (\n    <>\n    <form>\n      <legend>Login JustSwap.it</legend>\n      <Input\n        id=\"user\"\n        label=\"Email\"\n        autoComplete=\"username\"\n        error={doesUserExist(loginObj.user)}\n        value={loginObj.user}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"pass\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        value={loginObj.pass}\n        onChange={inputHandler}\n      />\n      <Button disabled={!loginReady} text=\"Login\" onClick={submitHandler} />\n    </form>\n    {/* <GoogleLogin\n      clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n      buttonText=\"Login\"\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      cookiePolicy={'single_host_origin'}\n    /> */}\n  </>\n  )\n}\n\nexport default connect(state => state)(LoginPage);"]},"metadata":{},"sourceType":"module"}