{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/bradras/Projects/justswap.it/components/LoginPage.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState, useEffect } from 'react';\nimport mockData from '../mockData.json';\nimport Input from './Input';\nimport Button from './Button';\nimport axios from 'axios'; // import GoogleLogin from 'react-google-login';\n\nvar LoginPage = function LoginPage(_ref) {\n  var setUserObj = _ref.setUserObj;\n  var loginInit = {\n    user: '',\n    pass: ''\n  };\n\n  var _useState = useState(loginInit),\n      loginObj = _useState[0],\n      setLoginObj = _useState[1];\n\n  var _useState2 = useState(false),\n      loginReady = _useState2[0],\n      setLoginReady = _useState2[1];\n\n  useEffect(function () {\n    console.log(loginObj);\n    var allFieldsFilled = Object.values(loginObj).every(function (item) {\n      return item.length > 0;\n    });\n\n    if (allFieldsFilled) {\n      setLoginReady(true);\n    } else {\n      setLoginReady(false);\n    }\n  }, [loginObj]);\n\n  var inputHandler = function inputHandler(e) {\n    e.preventDefault();\n    setLoginObj(_objectSpread({}, loginObj, {}, _defineProperty({}, e.target.id, e.target.value)));\n  }; // const responseGoogle = (response) => {\n  //   console.log(response);\n  // }\n\n\n  var doesUserExist = function doesUserExist(email) {\n    var foundUser = mockData.users.filter(function (user) {\n      return user.email === email;\n    });\n\n    if (email.length > 0 && foundUser.length === 0) {\n      return 'Email not found.';\n    }\n  };\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault();\n    loginUser(loginObj);\n  };\n\n  var loginUser = function loginUser(obj) {\n    var dataTransformer = function dataTransformer(data) {\n      return {\n        email: data.user,\n        password: data.pass\n      };\n    };\n\n    var transformedData = dataTransformer(obj);\n\n    var createToken = function createToken() {\n      return _regeneratorRuntime.async(function createToken$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.post('http://localhost:8000/api/auth/jwt/create', transformedData).then(function (response) {\n                return response.data;\n              })[\"catch\"](function (error) {\n                if (error.response) {\n                  console.log('__Response__');\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  console.log('Req:', error.request);\n                } else {\n                  console.log('Error: ', error.message);\n                }\n\n                console.log(error.config);\n              }));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var getUserInfo = function getUserInfo(token) {\n      return _regeneratorRuntime.async(function getUserInfo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(axios.get('http://localhost:8000/api/auth/users/me', {\n                params: transformedData,\n                headers: {\n                  Authorization: \"Bearer \".concat(token.access)\n                }\n              }).then(function (response) {\n                return response.data;\n              })[\"catch\"](function (error) {\n                if (error.response) {\n                  console.log('__Response__');\n                  console.log(error.response.data);\n                  console.log(error.response.status);\n                  console.log(error.response.headers);\n                } else if (error.request) {\n                  console.log('Req:', error.request);\n                } else {\n                  console.log('Error: ', error.message);\n                }\n\n                console.log(error.config);\n              }));\n\n            case 2:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    createToken().then(function (token) {\n      return getUserInfo(token);\n    }).then(function (user) {\n      setUserObj(user);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, __jsx(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Login JustSwap.it\"), __jsx(Input, {\n    id: \"user\",\n    label: \"Email\",\n    autoComplete: \"username\",\n    error: doesUserExist(loginObj.user),\n    value: loginObj.user,\n    onChange: inputHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), __jsx(Input, {\n    id: \"pass\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    value: loginObj.pass,\n    onChange: inputHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    disabled: !loginReady,\n    text: \"Login\",\n    onClick: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/bradras/Projects/justswap.it/components/LoginPage.tsx"],"names":["useState","useEffect","mockData","Input","Button","axios","LoginPage","setUserObj","loginInit","user","pass","loginObj","setLoginObj","loginReady","setLoginReady","console","log","allFieldsFilled","Object","values","every","item","length","inputHandler","e","preventDefault","target","id","value","doesUserExist","email","foundUser","users","filter","submitHandler","loginUser","obj","dataTransformer","data","password","transformedData","createToken","post","then","response","error","status","headers","request","message","config","getUserInfo","token","get","params","Authorization","access"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport mockData from '../mockData.json'\nimport Input from './Input'\nimport Button from './Button'\nimport axios from 'axios'\n// import GoogleLogin from 'react-google-login';\n\nconst LoginPage = ({\n  setUserObj\n}) => {\n  const loginInit = {\n    user: '',\n    pass: ''\n  }\n  const [loginObj, setLoginObj] = useState(loginInit)\n  const [loginReady, setLoginReady] = useState(false)\n\n  useEffect(() => {\n    console.log(loginObj)\n    const allFieldsFilled = Object.values(loginObj).every(item => item.length > 0)\n    if (allFieldsFilled) {\n      setLoginReady(true)\n    } else {\n      setLoginReady(false)\n    }\n  }, [loginObj])\n\n  const inputHandler = (e) => {\n    e.preventDefault()\n    setLoginObj({\n      ...loginObj,\n      ...{ [e.target.id]: e.target.value }\n    })\n  }\n\n  // const responseGoogle = (response) => {\n  //   console.log(response);\n  // }\n\n  const doesUserExist = (email) => {\n    const foundUser = mockData.users.filter(user => user.email === email)\n    if (email.length > 0 && foundUser.length === 0) {\n      return 'Email not found.'\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    loginUser(loginObj)\n  }\n\n  const loginUser = (obj) => {\n    const dataTransformer = (data) => {\n      return ({\n        email: data.user,\n        password: data.pass\n      })\n    }\n\n    const transformedData = dataTransformer(obj)\n\n    const createToken = async () => {\n      return await axios.post('http://localhost:8000/api/auth/jwt/create', transformedData)\n      .then(function (response) {\n        return response.data\n      })\n      .catch(function (error) {\n        if (error.response) {\n          console.log('__Response__');\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          console.log('Req:', error.request);\n        } else {\n          console.log('Error: ', error.message);\n        }\n        console.log(error.config);\n      });\n    }\n\n    const getUserInfo = async (token) => {\n      return await axios.get('http://localhost:8000/api/auth/users/me', {\n        params: transformedData,\n        headers: {\n          Authorization: `Bearer ${token.access}`\n        }\n      })\n      .then(function (response) {\n        return response.data\n      })\n      .catch(function (error) {\n        if (error.response) {\n          console.log('__Response__');\n          console.log(error.response.data);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        } else if (error.request) {\n          console.log('Req:', error.request);\n        } else {\n          console.log('Error: ', error.message);\n        }\n        console.log(error.config);\n      });\n    }\n    createToken()\n    .then(token => getUserInfo(token))\n    .then(user => {\n      setUserObj(user)\n    })\n  }\n\n  return (\n    <>\n    <form>\n      <legend>Login JustSwap.it</legend>\n      <Input\n        id=\"user\"\n        label=\"Email\"\n        autoComplete=\"username\"\n        error={doesUserExist(loginObj.user)}\n        value={loginObj.user}\n        onChange={inputHandler}\n      />\n      <Input\n        id=\"pass\"\n        label=\"Password\"\n        type=\"password\"\n        autoComplete=\"current-password\"\n        value={loginObj.pass}\n        onChange={inputHandler}\n      />\n      <Button disabled={!loginReady} text=\"Login\" onClick={submitHandler} />\n    </form>\n    {/* <GoogleLogin\n      clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n      buttonText=\"Login\"\n      onSuccess={responseGoogle}\n      onFailure={responseGoogle}\n      cookiePolicy={'single_host_origin'}\n    /> */}\n  </>\n  )\n}\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}